name: Publish Wino Mail Release

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: Target branch to build from
        default: dev
        type: string
  schedule:
    - cron: "0 0 * * 1" # Every Monday at midnight UTC

env:
  target_branch: ${{ inputs.target_branch || 'dev' }}

jobs:
  fetch_tags:
    name: Fetch release tags
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.tags.outputs.result }}
    steps:
      - name: Collect info about the latest releases
        id: tags
        uses: actions/github-script@v7
        with:
          script: |
            let latestRelease = { tag_name: "" };
            try {
              const { data } = await github.rest.repos.getLatestRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              latestRelease = data;
            } catch (error) {
              if (error.status !== 404) {
                throw error;
              }
            }

            const { data: { parent } } = await github.rest.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const { data: latestReleaseParent } = await github.rest.repos.getLatestRelease({
              owner: parent.owner.login,
              repo: parent.name,
            });

            return {
              latest_release: latestRelease.tag_name,
              latest_release_parent: latestReleaseParent.tag_name,
            };

  rebase:
    name: Rebase target branch
    needs: fetch_tags
    if: needs.fetch_tags.outputs.tags.latest_release != needs.fetch_tags.outputs.tags.latest_release_parent
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          ref: ${{ env.target_branch }}
      - name: Configure Git
        run: |
          git config --local user.name 'GitHub Actions'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Rebase taget branch on upstream branch
        run: |
          git fetch upstream
          git rebase upstream/${{ needs.fetch_tags.outputs.tags.latest_release_parent }}
      - name: Push changes
        run: git push origin ${{ env.target_branch }} --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-lockfiles:
    name: Update lockfiles
    needs: rebase
    permissions:
      contents: write
    uses: ./.github/workflows/generate_lockfiles.yml
    with:
      target_branch: ${{ inputs.target_branch || 'dev' }}

  build:
    name: Build app
    needs: update-lockfiles
    uses: ./.github/workflows/build.yml
    with:
      target_branch: ${{ inputs.target_branch || 'dev' }}

  publish:
    name: Publish app
    needs: [build, fetch_tags]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download latest artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e
        with:
          pattern: Wino-Mail-*
      - name: Publish release
        uses: softprops/action-gh-release@ab50eebb6488051c6788d97fa95232267c6a4e23
        with:
          tag_name: ${{ needs.fetch_tags.outputs.tags.latest_release }}
          files: |
            **/*.appx
            **/*.msixbundle
